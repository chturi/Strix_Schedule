
@{
    ViewBag.Title = "Index";
}

<h2> </h2>


<div id='wrap'>

    @*@Schedule element*@
    <div id="scheduler">
        <div class="modal-footer">
            <button type="button" class="btn btn-default" id="btnAddEmployee" style="float: left">Add Employee</button>
        </div>
    </div>


    @*@Draggable Event menu*@
    <div id='external-events'>
        <div id='external-events-listing'>
            <h4>Work shifts</h4>
            <div class='fc-event' style="background-color:#56ad68">Kuren</div>
            <div class='fc-event' style="background-color:#c9c36e">Dessert</div>
            <div class='fc-event' style="background-color:#5677ad">Matsalen</div>
            <div class='fc-event' style="background-color:#6dc9a1">Hovtjänst</div>
            <div class='fc-event' style="background-color:#8429ce">Deltid</div>
            <div class='fc-event' style="background-color:#bc23ac">Extra</div>
        </div>

    </div>

    <div style='clear:both'></div>

</div>




@*Add/Edit Employee Modal*@
<div id="employeeAddModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add Employee</h4>
            </div>
            <div class="modal-body">
                <form class="col-md-12 form-horizontal">
                    <input type="hidden" id="hdEmployeeID" value="0" />
                    <div class="form-group">
                        <label>First Name</label>
                        <input type="text" id="txtFirstName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Last Name</label>
                        <input type="text" id="txtLastName" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Occupation</label>
                        <select id="ddOccupation" class="form-control">
                            <option value="Extra">Extra</option>
                            <option value="Waiter">Waiter</option>
                        </select>
                    </div>
                    <button type="button" id="btnSaveEmployee" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
        </div>
    </div>
</div>

@*Event click modal*@
<div id="eventClickModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="eventTitle"></span></h4>
            </div>
            <div class="modal-body">
                <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                    <span class="=" glyphicon glyphicon-remove"></span> Remove
                </button>
                <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="=" glyphicon glyphicon-remove"></span> Edit
                </button>
                <p id="pDetails"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*Resource click modal*@
<div id="resourceClickModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"><span id="resourceTitle"></span></h4>
            </div>
            <div class="modal-body">
                <button id="btnDeleteRes" class="btn btn-default btn-sm pull-right">
                    <span class="=" glyphicon glyphicon-remove"></span> Remove
                </button>
                <button id="btnEditRes" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                    <span class="=" glyphicon glyphicon-remove"></span> Edit
                </button>
                <p id="pDetailsRes"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@*Edit/Add Event Modal*@
<div id="eventAddModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Save Event</h4>
            </div>
            <div class="modal-body">
                <form class="col-md-12 form-horizontal">
                    <input type="hidden" id="hdEventID" value="0" />
                    <input type="hidden" id="hdEmployeeID" value="0" />
                    <div class="form-group">
                        <label>Title</label>
                        <input type="text" id="txtSubject" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Start</label>
                        <div class="input-group date" id="dtp1">
                            <input type="text" id="txtStart" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label> <input type="checkbox" id="chkIsFullDay" checked="checked" /> Is Full day event</label>
                        </div>
                    </div>
                    <div class="form-group" id="divEndDate" style="display:none">
                        <label>End</label>
                        <div class="input-group date" id="dtp2">
                            <input type="text" id="txtEnd" class="form-control" />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Description</label>
                        <input readonly type="text" id="txtDescription" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label>Theme Color</label>
                        <select id="ddThemeColor" class="form-control">
                            <option value="red">Red</option>
                            <option value="blue">Blue</option>
                            <option value="black">Black</option>
                            <option value="green">Green</option>
                            <option value="#c9c36e">Yellow</option>
                        </select>
                    </div>
                    <button type="button" id="btnSave" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </form>
            </div>
            <div class="modal-footer">
            </div>
        </div>
    </div>
</div>






@*CSS Imports*@
<link href="~/Content/dragableEventMenu.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.print.css" rel="stylesheet" media="print" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar-scheduler/1.9.4/scheduler.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css" rel="stylesheet" />

@*Javascript imports*@
@section scripts{
    @*<script src="~/Scripts/jquery-1.12.4.min.js"></script> (Not needed for some reason.)*@


    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.9.0/fullcalendar.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar-scheduler/1.9.4/scheduler.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>




    <script>
        //Schedule functions
        $(document).ready(function () {

            //Storing variables for event calling and execution
            var schedule = [];
            var selectedEvent = null;
            var selectedResource = null;
            //Date to be rendendered by calendar      
            var today = new Date();
            var renderDate = moment(today).format();
            
            //Initially execution to render calendar
            FetchEventAndRenderCalendar();


            //Functions for Application

            //Ajax call to get the events from database
            function FetchEventAndRenderCalendar() {
                schedule = [];
                $.ajax({
                    type: "GET",
                    url: "/Schedule/GetEvents",
                    success: function (data) {
                        //For loop to get all events in database
                        $.each(data, function (i, v) {
                            schedule.push({
                                eventID: v.EventID,
                                title: v.EventTitle,
                                description: v.Description,
                                start: moment(v.Start).format(),
                                end: v.End != null ? moment(v.End).format() : null,
                                color: v.ThemeColor,
                                allDay: v.IsFullDay,
                                resourceId: v.EmployeeID,
                                color: v.ThemeColor
                            });
                        })

                        GenerateScheduler(schedule)
                        $('#scheduler').fullCalendar('refetchEvents')
                        $('#scheduler').fullCalendar('refetchResources')
                        $('#scheduler').fullCalendar('render')
                        $('#scheduler').fullCalendar('gotoDate',renderDate)
                        //Sets renderDate to current date
                        renderDate = moment(today).format();
                       
                    },
                    //Catch error of loading
                    error: function (error) {
                        alert('Failed to load all events in schedule!')
                    },
                })
            }
            //Function to Generate Calendar
            function GenerateScheduler(schedule) {
                //Clear any previous rendered Scheduler
                $('#scheduler').fullCalendar('destroy')
                //Generate new Scheduler
                $('#scheduler').fullCalendar({
                    schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source', //Open source liscence key
                    contentHeight: 600,
                    defaultDate: new Date(), //Display todays date by default
                    defaultView: 'timelineWeek',
                    timeFormat: 'h(:mm)a',
                    header: {
                        left: 'prev,next today', //Option buttons on left corner of header of Scheduler
                        center: 'title',
                        right: 'month,timelineWeek'
                    },
                    views: { //Adds timeline view option for fullcalender, "resource view"
                        timelineFiveDays: {
                            type: 'timelineWeek',
                            duration: { days: 5 },
                            minTime: '06:00:00',
                            maxTime: '18:00:00',
                            slotDuration: '04:00:00',
                            slotLabelInterval: '04:00:00',
                            scrollTime: '06:00'
                        }
                    },
                    eventLimit: true, //if resource slot is full, replaces graphical represenation with plus sign.
                    eventColor: '#378006', //Default event color
                    events: schedule,
                    resourceGroupField: 'groupId',
                    resources: {
                        url: "/Schedule/GetResources",
                        type: 'POST'
                    },
                    //On click event for resources
                    resourceRender: function(resource, labelTds, bodyTds) {
                        labelTds.on('click', function () {
                            selectedResource = resource;
                            $('#resourceClickModal #resourceTitle').text(resource.title);
                            var $description = $('<div/>');
                            $description.append($('<p>').html('<b>Employment ID: </b>' + resource.id));
                            $description.append($('<p>').html('<b>Occupation: </b>' + resource.groupId));
                            $('#resourceClickModal #pDetailsRes').empty().html($description);
                            $('#resourceClickModal').modal();
                        });
                    },
                    eventClick: function (calEvent, jsEvent, view) {
                        //Creates HTML code for displaying on event click details
                        selectedEvent = calEvent;
                        $('#eventClickModal #eventTitle').text(calEvent.title);
                        var $description = $('<div/>');
                        $description.append($('<p>').html('<b>Start: </b>' + moment(calEvent.start).format("MM/DD/YYYY HH:mm A")));
                        if (calEvent.end != null) {
                            $description.append($('<p>').html('<b>End: </b>' + moment(calEvent.end).format("MM/DD/YYYY HH:mm A")));
                        }
                        $description.append($('<p>').html('<b>Description: </b>' + calEvent.description));
                        $('#eventClickModal #pDetails').empty().html($description);
                        $('#eventClickModal').modal();
                    },
                    select: function (start,end,event,view,resource) {
                        var ResourceTitle = resource.title
                        var ResourceId = resource.id
                        selectedEvent = {
                            eventID: 0,
                            title: ResourceTitle,
                            description: '',
                            start: moment(start).format(),
                            end: moment(end).format(),
                            allDay: false,
                            color: '',
                            resourceId: ResourceId
                        }

                        openAddEditForm();
                    },
                    //Time slot settings
                    minTime: '06:00:00',
                    maxTime: '18:00:00',
                    slotDuration: '04:00:00',
                    slotLabelInterval: '04:00:00',
                    scrollTime: '06:00',
                    //Editable information
                    editable: true,
                    droppable: true,
                    selectable: true,
                    eventDrop: function (event) {
                        var data = {
                            EventID: event.eventID,
                            EmployeeID: event.resourceId,
                            Title: event.title,
                            Start: moment(event.start).format("MM-DD-YYYY HH:mm a"),
                            End: event.end != null ? moment(event.end).format("MM-DD-YYYY HH:mm a") : null,
                            Description: event.description,
                            ThemeColor: event.color,
                            IsFullDay: event.allDay
                        }
                        SaveEvent(data);
                    },
                    eventReceive: function (event) {
                        //Temporary Variables for date manipulation.
                        var dateHolderStart = new Date(event.start);
                        var dateHolderEnd = new Date(event.start);
                        //Changing hours on schedule depending on which event was dragged while keeping the date selected by the users dropp.
                        if (event.title == "Dessert") {
                            dateHolderStart.setHours(7)
                            dateHolderEnd.setHours(15, 30)
                            event.color = "#c9c36e"
                        }
                        else if (event.title == "Kuren") {
                            dateHolderStart.setHours(6)
                            dateHolderEnd.setHours(15)
                            event.color = "#56ad68"
                        }
                        else if (event.title == "Matsalen") {
                            dateHolderStart.setHours(9);
                            dateHolderEnd.setHours(17)
                            event.color = "#5677ad"
                        }
                        else if (event.title == "Hovtjänst") {
                            dateHolderStart.setHours(7,30);
                            dateHolderEnd.setHours(16)
                            event.color = "#6dc9a1"
                        }
                        else if (event.title == "Deltid") {
                            dateHolderStart.setHours(10);
                            dateHolderEnd.setHours(15)
                            event.color = "#8429ce"
                        }
                        else if (event.title == "Extra") {
                            dateHolderStart.setHours(10);
                            dateHolderEnd.setHours(16)
                            event.color = "#bc23ac"
                        }

                        var data = {
                            EventID: 0,
                            EmployeeID: event.resourceId,
                            Title: event.title,
                            Start: moment(dateHolderStart).format("MM-DD-YYYY HH:mm a"),
                            End: moment(dateHolderEnd).format("MM-DD-YYYY HH:mm a"),
                            Description: event.title,
                            ThemeColor: event.color
                        }
                        console.log(data);
                        SaveEvent(data);
                    }
                    ,
                    eventOverlap: false,
                    weekNumbers: true,
                    draggable: true,
                    weekends: false,
                     })

            }
            //Function to Open Add/Edit form
            function openAddEditForm() {
                if (selectedEvent != null) {
                    //Gives value to the modal CSS/HTML code.
                    $('#hdEventID').val(selectedEvent.eventID);
                    $('#hdEmployeeID').val(selectedEvent.resourceId);
                    $('#txtSubject').val(selectedEvent.title);
                    // selectedEvent.start.format('MM/DD/YYYY HH:mm A')
                    $('#txtStart').val(moment(selectedEvent.start).format("MM/DD/YYYY HH:mm A"));
                    $('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                    $('#chkIsFullDay').change();
                    $('#txtEnd').val(selectedEvent.end != null ? moment(selectedEvent.end).format("MM/DD/YYYY HH:mm A") : "");
                    $('#txtDescription').val(selectedEvent.description);
                    $('#ddThemeColor').val(selectedEvent.color);

                }
                //Hides modal
                $('#eventClickModal').modal('hide');
                $('#eventAddModal').modal();
            }
            //Open add costumer modal form
            function openAddEditEmployeeForm()
            {
                if (selectedResource != null) {

                    var namesplit = [];
                    namesplit = selectedResource.title.split(" "); // Split title into first and last name
                    var firstname = namesplit[0];
                    var lastname = namesplit.slice(1, namesplit.length).toString().replace(","," ") //If persons last name has several or spaces between lastnames they are included


                    $('#hdEmployeeID').val(selectedResource.id);
                    $('#txtFirstName').val(firstname);
                    $('#txtLastName').val(lastname);
                    $('#ddOccupation').val(selectedResource.groupId);

                    selectedResource = null;


                }

            $('#resourceClickModal').modal('hide');
            $('#employeeAddModal').modal('show');
            }
            //Function to Save a event to database
            function SaveEvent(data) {
                //Save the date of the saved event
                renderDate = moment(data.Start).format();
                console.log("Saved Date: " + renderDate);
                
                $.ajax({//Ajax is used for to call controller to get and post data.
                    type: 'POST',
                    url: '/Schedule/SaveEvent', //Call Controller
                    data: data,
                    success: function (data) {
                        if (data.status) {                         
                            FetchEventAndRenderCalendar();
                            $('#eventAddModal').modal('hide');
                        }
                    },
                    error: function () {
                        alert('Failed to Save event!');
                    }
                })
            }
            //Function to save new Employee
            function SaveEmployee(data)
            {
                $.ajax({//Ajax is used for to call controller to get and post data.
                    type: 'POST',
                    url: '/Schedule/SaveEmployee', //Call Controller
                    data: data,
                    success: function (data) {
                        if (data.status) {
                            FetchEventAndRenderCalendar();
                            $('#employeeAddModal').modal('hide');

                        }
                    },
                    error: function () {
                        alert('Failed to Save Employee!');
                    }
                })
            }

            function resetValEventModal()
            {
                $('#hdEventID').val(0),
                $('#hdEmployeeID').val(0),
                $('#txtStart').val(" "),
                $('#chkIsFullDay').is(':checked'),
                $('#txtEnd').val(" "),
                $('#txtDescription').val(" "),
                $('#ddThemeColor').val(" "),
                $('#chkIsFullDay').val(" ")
            }
            function resetValResourceModal()
            {
                $('#hdEmployeeID').val(0);
                $('#txtFirstName').val("");
                $('#txtLastName').val("");
                $('#ddOccupation').val("");

            }

            //Button handlers for Application

            //Button to Add Employee
            $('#btnAddEmployee').click(function () {
                selectedResource = null;
                resetValResourceModal();
                openAddEditEmployeeForm();
            })

            //Button to Save New Employee
            $('#btnSaveEmployee').click(function () {
                if ($('#txtFirstName').val().trim() == "") {
                    alert('First Name required')
                    return;
                }
                if ($('#txtLastName').val().trim() == "") {
                    alert('Last Name required')
                    return;
                }
                if ($('#ddOccupation').val() == null) {
                    alert('Occupation required')
                    return;
                }


                var data = {
                    EmployeeID: $('#hdEmployeeID').val(),
                    FirstName: $('#txtFirstName').val(),
                    LastName: $('#txtLastName').val().trim(),
                    Occupation: $('#ddOccupation').val(),

                }

                SaveEmployee(data)




            })

            //DeleteEvent Button
            $('#btnDelete').click(function () {

                if (selectedEvent != null && confirm('Are you sure?'))
                {
                    renderDate = moment(selectedEvent.start).format();
                    $.ajax({
                        type: 'POST',
                        url: "/Schedule/DeleteEvent",
                        data: {'eventID': selectedEvent.eventID}, //Used to send data through HTTP request POST
                        success: function (data) {
                            if(data.status)
                            {  //refresh calender if success
                                FetchEventAndRenderCalendar();
                                $('#eventClickModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('Failed to delete event!')
                        }


                    })
                }
                {

                }
            })

            //Open Edit/Add form
            $('#btnEdit').click(function () {
            //Open modal window for edit form for selected event
            openAddEditForm();
            })

            //Save Event Button
            $('#btnSave').click(function () {


                //Check if text is inputted in submit
                if ($('#txtSubject').val().trim() == "") {
                    alert('Title required')
                    return;
                }
                if ($('#txtStart').val().trim() == "") {
                    alert('Start Date required')
                    return;
                }
                if ($('#chkIsFullDay').is(':checked') == false && $('#txtEnd').val().trim() == "") {
                    alert('End Date required')
                    return;
                }
                else {
                    var startDate = moment($('#txtStart').val(), "MM/DD/YYYY HH:mm A").toDate();
                    var endDate = moment($('#txtEnd').val(), "MM/DD/YYYY HH:mm A").toDate();
                    if (startDate > endDate) {
                        alert('Invalid End date');
                        return;
                    }
                }

                var data = {

                    EventID: $('#hdEventID').val(),
                    EmployeeID: $('#hdEmployeeID').val(),
                    Title: $('#txtSubject').val(),
                    Start: $('#txtStart').val().trim(),
                    End: $('#chkIsFullDay').is(':checked') ? null : $('#txtEnd').val().trim(),
                    Description: $('#txtDescription').val(),
                    ThemeColor: $('#ddThemeColor').val(),
                    IsFullDay: $('#chkIsFullDay').is(':checked')

                }
                SaveEvent(data);




            })
            $('#dtp1').datetimepicker({
                format: 'MM/DD/YYYY HH:mm A',


            });
            $('#dtp2').datetimepicker({
                format: 'MM/DD/YYYY HH:mm A',

            });
            $('#chkIsFullDay').change(function () {
                if ($(this).is(':checked')) {
                    $('#divEndDate').hide()
                }
                else {
                    $('#divEndDate').show()
                }
            })

            //Employee edit buttons
            $('#btnEditRes').click(function () {
                //Open modal window for edit form for selected event
                openAddEditEmployeeForm();
            })
            $('#btnDeleteRes').click(function () {
                if (selectedResource != null && confirm('Are you sure?')) {
                    $.ajax({
                        type: 'POST',
                        url: "/Schedule/DeleteEmployee",
                        data: { 'employeeID': selectedResource.id }, //Used to send data through HTTP request POST
                        success: function (data) {
                            if (data.status) {  //refresh calender if success
                                FetchEventAndRenderCalendar();
                                $('#resourceClickModal').modal('hide');
                            }
                        },
                        error: function () {
                            alert('Failed to delete resource!')
                        }
                    })
                }
            })



            //Draggable eventmenu
            $('#external-events .fc-event').each(function () {

                // store data so the calendar knows to render an event upon drop
                $(this).data('event', {
                    EventID: 0,
                    title: $.trim($(this).text()), // use the element's text as the event title
                    duration: '09:00',
                    startTime: '06:00:00',
                    



                });


                // make the event draggable using jQuery UI
                $(this).draggable({
                    zIndex: 999,
                    revert: true,      // will cause the event to go back to its
                    revertDuration: 0  //  original position after the drag
                });

            });


        })
    </script>
}

